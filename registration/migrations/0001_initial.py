# Generated by Django 4.2 on 2024-07-17 15:59

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('phone_number', models.CharField(blank=True, max_length=20, null=True, unique=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('username', models.CharField(max_length=150, null=True, unique=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('vcard_qr_image', models.ImageField(blank=True, null=True, upload_to='vcards/')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Business',
            fields=[
                ('business_name', models.CharField(max_length=255)),
                ('business_address', models.CharField(max_length=255)),
                ('business_phone_number', models.CharField(blank=True, max_length=20, null=True)),
                ('lipa_number', models.CharField(blank=True, max_length=15, null=True)),
                ('business_type', models.CharField(blank=True, max_length=100, null=True)),
                ('phone_network', models.CharField(blank=True, max_length=10, null=True)),
                ('website', models.URLField(blank=True, null=True)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('qr_image', models.ImageField(blank=True, null=True, upload_to='qr_codes/')),
                ('has_benefited_from_offer', models.BooleanField(default=False)),
                ('owner', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('admin', 'Admin'), ('manager', 'Manager'), ('cashier', 'Cashier'), ('storekeeper', 'Storekeeper'), ('inventory_manager', 'Inventory Manager')], default='admin', max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('phone_number', models.CharField(max_length=20)),
                ('business', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='registration.business')),
            ],
        ),
        migrations.AddField(
            model_name='customuser',
            name='role',
            field=models.ForeignKey(default=1, null=True, on_delete=django.db.models.deletion.PROTECT, to='registration.role'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
    ]
