# Generated by Django 5.0.7 on 2025-06-08 05:27

import django.utils.crypto
import django.utils.timezone
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BusinessType',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('categoryName', models.CharField(max_length=255)),
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('unit', models.CharField(blank=True, choices=[('mls', 'Milliliters'), ('l', 'Liters'), ('g', 'Grams'), ('kg', 'Kilograms'), ('doz', 'Dozens'), ('pcs', 'Pieces'), ('box', 'Boxes')], max_length=3, null=True)),
                ('unit_quantity', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('type', models.CharField(blank=True, max_length=255, null=True)),
                ('subtype', models.CharField(blank=True, max_length=255, null=True)),
                ('isSynced', models.BooleanField(default=False)),
                ('lastSyncTime', models.DateTimeField(blank=True, null=True)),
                ('isDeleted', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='DraftOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('draft_number', models.CharField(default=django.utils.crypto.get_random_string, max_length=50, unique=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('Draft', 'Draft'), ('Pending', 'Pending'), ('Completed', 'Completed'), ('Cancelled', 'Cancelled')], default='Draft', max_length=20)),
                ('notes', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Expense',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date', models.DateField(default=django.utils.timezone.now, verbose_name='Expense Date')),
                ('without_tax_cost', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Cost Without Tax')),
                ('with_tax_cost', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Cost With Tax')),
                ('total', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Total Cost')),
                ('approval_status', models.BooleanField(default=False, verbose_name='Approval Status')),
                ('receipt', models.FileField(blank=True, null=True, upload_to='receipts/', verbose_name='Receipt File')),
                ('vendor', models.CharField(blank=True, max_length=255, null=True, verbose_name='Vendor Name')),
                ('payment_method', models.CharField(choices=[('Cash', 'Cash'), ('Loan', 'Loan')], default='Cash', max_length=50, verbose_name='Payment Method')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notes')),
                ('recurring', models.BooleanField(default=False)),
                ('category', models.CharField(choices=[('Travel', 'Travel'), ('Supplies', 'Supplies'), ('Meals', 'Meals'), ('Other', 'Other')], max_length=50, null=True, verbose_name='Expense Category')),
            ],
        ),
        migrations.CreateModel(
            name='ExpenseAuditLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('entity_type', models.CharField(choices=[('Expense', 'Expense'), ('ExpensePolicy', 'ExpensePolicy')], max_length=50)),
                ('entity_id', models.UUIDField()),
                ('action', models.CharField(max_length=50)),
                ('details', models.JSONField(blank=True, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='ExpenseCategory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ExpensePolicy',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, verbose_name='Policy Name')),
                ('max_amount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Maximum Allowable Expense')),
                ('categories', models.JSONField(default=list, help_text="Allowed categories under this policy. Example: ['Travel', 'Meals']", verbose_name='Categories')),
                ('timeframe', models.CharField(help_text='The timeframe for the policy (e.g., daily, weekly, monthly).', max_length=50, verbose_name='Timeframe')),
                ('rules', models.TextField(blank=True, help_text='Optional additional rules for the policy.', null=True, verbose_name='Rules')),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('draft', 'Draft'), ('expired', 'Expired')], default='active', max_length=20, verbose_name='Policy Status')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Last Updated At')),
            ],
        ),
        migrations.CreateModel(
            name='Installment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('due_date', models.DateField(blank=True, null=True)),
                ('amount_due', models.DecimalField(decimal_places=2, max_digits=15)),
                ('amount_paid', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('reminder_sent', models.BooleanField(default=False)),
                ('reminder_interval', models.CharField(choices=[('3_days', '3 Days'), ('1_week', '1 Week'), ('2_weeks', '2 Weeks'), ('1_month', '1 Month')], default='3_days', max_length=10)),
                ('last_reminder_sent', models.DateField(blank=True, null=True)),
                ('last_payment_date', models.DateField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('type', models.CharField(choices=[('email', 'Email'), ('sms', 'SMS'), ('in_app', 'In-App')], default='in_app', max_length=20, verbose_name='Notification Type')),
                ('message', models.TextField(verbose_name='Notification Message')),
                ('is_read', models.BooleanField(default=False, verbose_name='Is Read')),
                ('send_at', models.DateTimeField(blank=True, help_text='Time to send the notification. Leave blank for immediate.', null=True, verbose_name='Scheduled Time')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('order_number', models.CharField(max_length=50, unique=True)),
                ('order_date', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('Pending', 'Pending'), ('Completed', 'Completed'), ('Cancelled', 'Cancelled')], default='Pending', max_length=20)),
                ('delivery_date', models.DateTimeField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('token', models.CharField(blank=True, max_length=32, null=True, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('quantity', models.PositiveIntegerField()),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('total_price', models.DecimalField(decimal_places=2, max_digits=10)),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_name', models.CharField(blank=True, max_length=255, null=True)),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('cost', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('quantity', models.IntegerField(blank=True, null=True)),
                ('barcode', models.CharField(blank=True, max_length=255, null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('expire_date', models.DateField(blank=True, null=True)),
                ('active', models.BooleanField(default=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('taxable', models.BooleanField(default=True)),
                ('product_type', models.CharField(blank=True, max_length=255, null=True)),
                ('discountable', models.BooleanField(default=True)),
                ('isDeleted', models.BooleanField(default=False)),
                ('isSynced', models.BooleanField(default=False)),
                ('lastSyncTime', models.DateTimeField(blank=True, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='product_images/')),
                ('min_stock', models.IntegerField(blank=True, default=20, help_text='Minimum stock level to trigger restock warning', null=True)),
                ('max_stock', models.IntegerField(blank=True, help_text='Maximum stock level to prevent overstocking', null=True)),
                ('location_type', models.CharField(blank=True, choices=[('warehouse', 'Warehouse'), ('Shop', 'Shop'), ('online', 'online')], default='store', max_length=50, null=True)),
                ('location_identifier', models.CharField(blank=True, help_text='Specific shelf or aisle in the store', max_length=255, null=True)),
            ],
            options={
                'ordering': ['-date_updated'],
            },
        ),
        migrations.CreateModel(
            name='ProductBusinessTypeAssociation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_added', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='PublicProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_name', models.CharField(max_length=255)),
                ('barcode', models.CharField(default='default_barcode_value', max_length=255, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('date_added', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('transaction_type', models.CharField(choices=[('cash', 'Cash'), ('lipa_namba', 'Lipa Kwa Simu'), ('bank_transfer', 'Bank Transfer'), ('credit_card', 'Credit Card'), ('loan', 'Loan'), ('other', 'Other')], max_length=20)),
                ('transaction_date', models.DateField(default=django.utils.timezone.now)),
                ('total_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('outstanding_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('is_synced', models.BooleanField(default=False)),
                ('is_deleted', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Sales',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('total_amount', models.DecimalField(decimal_places=2, default=1, max_digits=10)),
                ('isSynced', models.BooleanField(default=False)),
                ('isDeleted', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='SalesItem',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('quantity', models.IntegerField()),
                ('price_per_unit', models.DecimalField(decimal_places=2, max_digits=10)),
                ('total_price', models.DecimalField(decimal_places=2, max_digits=10)),
            ],
        ),
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('supplierName', models.CharField(max_length=255)),
                ('contactPerson', models.CharField(max_length=255)),
                ('contactEmail', models.EmailField(blank=True, max_length=254, null=True)),
                ('contactPhone', models.CharField(max_length=15)),
                ('address', models.CharField(blank=True, max_length=255, null=True)),
                ('supplierType', models.CharField(choices=[('Manufacturer', 'Manufacturer'), ('Distributor', 'Distributor'), ('Wholesaler', 'Wholesaler'), ('Retailer', 'Retailer'), ('Other', 'Other')], default='Other', max_length=50)),
                ('isSynced', models.BooleanField(default=False)),
                ('isDeleted', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Warehouse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('warehouseName', models.CharField(max_length=255)),
                ('warehouseLocation', models.CharField(max_length=255)),
            ],
        ),
    ]
