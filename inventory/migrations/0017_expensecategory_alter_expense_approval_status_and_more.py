# Generated by Django 5.0.7 on 2024-11-29 00:22

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('inventory', '0016_rename_after_tax_cost_expense_with_tax_cost_and_more'),
        ('registration', '0004_alter_customer_id'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ExpenseCategory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.AlterField(
            model_name='expense',
            name='approval_status',
            field=models.BooleanField(default=False, verbose_name='Approval Status'),
        ),
        migrations.AlterField(
            model_name='expense',
            name='business',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='registration.business', verbose_name='Associated Business'),
        ),
        migrations.AlterField(
            model_name='expense',
            name='category',
            field=models.CharField(choices=[('Travel', 'Travel'), ('Supplies', 'Supplies'), ('Meals', 'Meals'), ('Other', 'Other')], max_length=50, null=True, verbose_name='Expense Category'),
        ),
        migrations.AlterField(
            model_name='expense',
            name='date',
            field=models.DateField(default=django.utils.timezone.now, verbose_name='Expense Date'),
        ),
        migrations.AlterField(
            model_name='expense',
            name='id',
            field=models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name='expense',
            name='notes',
            field=models.TextField(blank=True, null=True, verbose_name='Notes'),
        ),
        migrations.AlterField(
            model_name='expense',
            name='payment_method',
            field=models.CharField(choices=[('Cash', 'Cash'), ('Loan', 'Loan')], default='Cash', max_length=50, verbose_name='Payment Method'),
        ),
        migrations.AlterField(
            model_name='expense',
            name='receipt',
            field=models.FileField(blank=True, null=True, upload_to='receipts/', verbose_name='Receipt File'),
        ),
        migrations.AlterField(
            model_name='expense',
            name='total',
            field=models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Total Cost'),
        ),
        migrations.AlterField(
            model_name='expense',
            name='vendor',
            field=models.CharField(blank=True, max_length=255, null=True, verbose_name='Vendor Name'),
        ),
        migrations.AlterField(
            model_name='expense',
            name='with_tax_cost',
            field=models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Cost With Tax'),
        ),
        migrations.AlterField(
            model_name='expense',
            name='without_tax_cost',
            field=models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Cost Without Tax'),
        ),
        migrations.CreateModel(
            name='ExpenseAuditLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('entity_type', models.CharField(choices=[('Expense', 'Expense'), ('ExpensePolicy', 'ExpensePolicy')], max_length=50)),
                ('entity_id', models.UUIDField()),
                ('action', models.CharField(max_length=50)),
                ('details', models.JSONField(blank=True, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('performed_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ExpensePolicy',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, verbose_name='Policy Name')),
                ('max_amount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Maximum Allowable Expense')),
                ('categories', models.JSONField(default=list, help_text="Allowed categories under this policy. Example: ['Travel', 'Meals']", verbose_name='Categories')),
                ('timeframe', models.CharField(help_text='The timeframe for the policy (e.g., daily, weekly, monthly).', max_length=50, verbose_name='Timeframe')),
                ('rules', models.TextField(blank=True, help_text='Optional additional rules for the policy.', null=True, verbose_name='Rules')),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('draft', 'Draft'), ('expired', 'Expired')], default='active', max_length=20, verbose_name='Policy Status')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Last Updated At')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='expense_policies', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='expense',
            name='policy',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='expenses', to='inventory.expensepolicy', verbose_name='Associated Policy'),
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('type', models.CharField(choices=[('email', 'Email'), ('sms', 'SMS'), ('in_app', 'In-App')], default='in_app', max_length=20, verbose_name='Notification Type')),
                ('message', models.TextField(verbose_name='Notification Message')),
                ('is_read', models.BooleanField(default=False, verbose_name='Is Read')),
                ('send_at', models.DateTimeField(blank=True, help_text='Time to send the notification. Leave blank for immediate.', null=True, verbose_name='Scheduled Time')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.DeleteModel(
            name='ExpenseTerms',
        ),
    ]
